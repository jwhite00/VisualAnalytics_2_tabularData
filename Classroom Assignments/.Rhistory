head(df.T)
names(df.T)=c('Crime','Daytime','Percent') #renaming
head(df.T)
library(ggplot2)
base = ggplot(df.T, aes(Daytime,Crime))
# plot value as point, size by value of percent
tablePlot1 = base + geom_point(aes(size = Percent), colour = "gray")
# add value of Percent as label, move it
tablePlot2 = tablePlot1 + geom_text(aes(label = Percent),
nudge_x = 0.1,
size=2)
tablePlot2
base  = ggplot(df.T, aes(x = Crime, y = Percent ) )
bars1 = base + geom_bar( stat = "identity" ) + theme_minimal()
# bar per day time with 'facet'
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars2
# change the minimal theme
bars3 = bars2 + theme( axis.text.x = element_text(angle = 90,
hjust = 1,
size=3 ) )
bars3
df.C=as.data.frame(CrimeCol)
colnames(df.C)=c('Crime','Daytime','Percent')
#####
base  = ggplot(df.C, aes(x = Crime, y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars2 + coord_flip()
df.C=as.data.frame(CrimeCol)
colnames(df.C)=c('Crime','Daytime','Percent')
#####
base  = ggplot(df.C, aes(x = Crime, y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars2
library(ggplot2)
library(magrittr)
library(ggrepel)
library(Rmisc)
library(tibble)
# table of proportion based on total, gives you panel data
df.T=as.data.frame(CrimeTotal)
#renaming
names(df.T)=c('Crime','Daytime','Percent')
#independent in columns, dependent in rows
CrimeCol=table(crime$crimecat,crime$Occurred.DayTime)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
#Exercise 4 prep
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
#MERGE
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
lolliplot1=base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
lolliplot2 = lolliplot1 + geom_point()
lolliplot3 = lolliplot2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
lolliplot4 = lolliplot3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
lolliplot5 = lolliplot4 + scale_x_discrete(limits=tableFreqO$access_mode)
lolliplot6 = lolliplot5 + facet_wrap( ~ Daytime ,nrow = 1)
lolliplot6+ coord_flip()
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars2 + coord_flip() + theme(axis.text.y = element_text(size=4,angle = 45))
# heatplot
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "white",
high = "black")
heat2
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
bars3 = bars + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
bars3 = bars2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
bars4 = bars3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
bars5 = bars4 + scale_x_discrete(limits=tableFreqO$access_mode)
bars6 = bars5 + facet_wrap( ~ Daytime ,nrow = 1)
bars6+ coord_flip()
df.C=as.data.frame(CrimeCol)
colnames(df.C)=c('Crime','Daytime','Percent')
#####
link="https://github.com/EvansDataScience/data/raw/master/crime.RData"
load(file = url(link))
library(ggplot2)
library(magrittr)
library(ggrepel)
library(Rmisc)
library(tibble)
# table of proportion based on total, gives you panel data
df.T=as.data.frame(CrimeTotal)
#renaming
names(df.T)=c('Crime','Daytime','Percent')
#independent in columns, dependent in rows
CrimeCol=table(crime$crimecat,crime$Occurred.DayTime)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
#Exercise 4 prep
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
#MERGE
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
bars3 = bars2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
bars4 = bars3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
bars5 = bars4 + scale_x_discrete(limits=tableFreqO$access_mode)
bars6 = bars5 + facet_wrap( ~ Daytime ,nrow = 1)
bars6+ coord_flip()
df.T=as.data.frame(CrimeTotal) # table of proportion based on total, gives you panel data
# YOU GET:
head(df.T)
names(df.T)=c('Crime','Daytime','Percent') #renaming
head(df.T)
library(ggplot2)
base = ggplot(df.T, aes(Daytime,Crime))
# plot value as point, size by value of percent
tablePlot1 = base + geom_point(aes(size = Percent), colour = "gray")
# add value of Percent as label, move it
tablePlot2 = tablePlot1 + geom_text(aes(label = Percent),
nudge_x = 0.1,
size=2)
tablePlot2
tablePlot3 = tablePlot2 + scale_size_continuous(range=c(0,10)) #change 10?
tablePlot4 = tablePlot3 + theme_minimal() # less ink
tablePlot4 + theme(legend.position="none") # no legend
base  = ggplot(df.T, aes(x = Crime, y = Percent ) )
bars1 = base + geom_bar( stat = "identity" ) + theme_minimal()
# bar per day time with 'facet'
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars3 = bars2 + theme( axis.text.x = element_text(angle = 90,
hjust = 1,
size=3 ) )
bars3
df.C=as.data.frame(CrimeCol)
colnames(df.C)=c('Crime','Daytime','Percent')
#####
base  = ggplot(df.C, aes(x = Crime, y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars2 + coord_flip()
par(mfrow=c(2,2)) # 2 rows, and two columns, by row:
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=7,
main="One week or more")
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=30,
main="One 30-day month or more")
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=180,
main="180 days or more")
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=365,
main="One year or more")
crimeYear=crime[crime$DaysToReport>=365,]
tapply(crimeYear$DaysToReport,crimeYear$Precinct,length)
tapply(crimeYear$DaysToReport,crimeYear$year,length)
crimeY2000=crime[(crime$DaysToReport>=365) & (crime$year>=2000),]
tapply(crimeY2000$DaysToReport,crimeY2000$Precinct,length)
boxplot(DaysToReport~Precinct,data=crimeY2000,
main="One year or more (from 2000)")
crimeY2000$YearsToReport=crimeY2000$DaysToReport/365
boxplot(YearsToReport~Precinct,data=crimeY2000,
main="One year or more (from 2000)")
boxplot(YearsToReport~Precinct,data=crimeY2000,subset = YearsToReport>=5,
main="Five years or more (from 2000)")
par(mfrow=c(2,1))
boxplot(YearsToReport~weekday,data=crimeY2000,
main="One year or more BY WEEKDAY (from 2000)",las=2)
boxplot(YearsToReport~Occurred.DayTime,data=crimeY2000,
main="One year or more BY TIME CRIME OCCURRED (from 2000)",las=2)
par(mfrow=c(2,1))
boxplot(YearsToReport~year,data=crimeY2000,
main="One year or more (from 2000)",las=2)
boxplot(YearsToReport~crimecat,data=crimeY2000,
main="One year or more (from 2000)",las=2)
# no missing:
crimeYearGG=crimeY2000[complete.cases(crimeY2000$YearsToReport),]
base = ggplot(crimeYearGG,aes(x=factor(year), y=YearsToReport))
box  = base + geom_boxplot()
box
base  = ggplot(crimeYearGG,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed',
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
link="https://raw.githubusercontent.com/jwhite00/Group-Project-Data-Vis/master/Link%20Data%20master.csv"
mydata4=read.csv(link)
names(mydata4)
mydata4=read.csv("https://raw.githubusercontent.com/jwhite00/Group-Project-Data-Vis/master/Data/newLinkData.csv")
names(mydata4)
(mydata4Total=table(mydata4$timeperiod,mydata4$access_mode)) #provides count
names(mydata4)
link="https://github.com/EvansDataScience/data/raw/master/crime.RData"
load(file = url(link))
library(ggplot2)
link="https://github.com/EvansDataScience/data/raw/master/crime.RData"
load(file = url(link))
library(ggplot2)
library(magrittr)
library(ggrepel)
library(Rmisc)
library(tibble)
(CrimeTotal=table(crime$crimecat,crime$Occurred.DayTime))
# using "pipes" to help readability:
(CrimeTotal=table(crime$crimecat,crime$Occurred.DayTime)%>% #create table and then...
prop.table() %>% #compute proportion and then...
"*"(100)%>% # multiply by 100 and then...
round(2) #...round to to decimals
)
CrimeCol=table(crime$crimecat,crime$Occurred.DayTime)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
CrimeCol
df.T=as.data.frame(CrimeTotal) # table of proportion based on total
# YOU GET:
head(df.T)
names(df.T)=c('Crime','Daytime','Percent') #renaming
head(df.T)
#data from Bivariate ST
# table of proportion based on total, gives you panel data
df.T=as.data.frame(CrimeTotal)
#renaming
names(df.T)=c('Crime','Daytime','Percent')
#independent in columns, dependent in rows
CrimeCol=table(crime$crimecat,crime$Occurred.DayTime)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
#Exercise 4 prep
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
#MERGE
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
bars3 = bars2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
bars4 = bars3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
bars5 = bars4 + scale_x_discrete(limits=tableFreqO$access_mode)
bars6 = bars5 + facet_wrap( ~ Daytime ,nrow = 1)
bars6+ coord_flip()
names(mydata1)
mydata1=read.csv("https://raw.githubusercontent.com/jwhite00/Group-Project-Data-Vis/master/Data/newLinkData.csv")
names(mydata1)
(CrimeTotal=table(mydata1$faretype,mydata1$origin))
# using "pipes" to help readability:
(RideDetail=table(mydata1$faretype,mydata1$origin)%>% #create table and then...
prop.table() %>% #compute proportion and then...
"*"(100)%>% # multiply by 100 and then...
round(2) #...round to to decimals
)
RideCol=table(mydata1$faretype,mydata1$origin)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
RideCol
df.T=as.data.frame(RideDetail) # table of proportion based on total
# YOU GET:
head(df.T)
names(df.T)=c('Fare Category','Origin','Percent') #renaming
head(df.T)
names(df.T)=c('FareCat','Origin','Percent') #renaming
head(df.T)
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = FareCat,
yend = Percent,
xend = FareCat), color = "grey50")
bars2
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
names(df.T)=c('FareCat','Origin','Percent') #renaming
head(df.T)
(RideDetail=table(mydata1$faretype,mydata1$origin))
# using "pipes" to help readability:
(RideDetail=table(mydata1$faretype,mydata1$origin)%>% #create table and then...
prop.table() %>% #compute proportion and then...
"*"(100)%>% # multiply by 100 and then...
round(2) #...round to to decimals
)
RideCol=table(mydata1$faretype,mydata1$origin)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
RideCol
df.T=as.data.frame(RideDetail) # table of proportion based on total
# YOU GET:
head(df.T)
names(df.T)=c('FareCat','Origin','Percent') #renaming
head(df.T)
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder( FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder( faretype , Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(faretype, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder( "faretype" , Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder( "FareCat" , Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder( FareCat , Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.T, aes(x = reorder( FareCat , Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars1
base  = ggplot(df.T, aes(x = reorder(FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = FareCat,
yend = Percent,
xend = FareCat), color = "grey50")
bars3 = bars2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
bars4 = bars3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
bars5 = bars4 + scale_x_discrete(limits=tableFreqO$access_mode)
bars5
base  = ggplot(df.T, aes(x = reorder(FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = FareCat,
yend = Percent,
xend = FareCat), color = "grey50")
bars3 = bars2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
bars4 = bars3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
bars5 = bars4 + scale_x_discrete(limits=tableFreqO$access_mode)
bars6 = bars5 + facet_wrap( ~ Daytime ,nrow = 1)
bars6+ coord_flip()
base  = ggplot(df.T, aes(x = reorder(FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = FareCat,
yend = Percent,
xend = FareCat), color = "grey50")
bars3 = bars2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
bars4 = bars3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
bars5 = bars4 + scale_x_discrete(limits=tableFreqO$access_mode)
bars6 = bars5 + facet_wrap( ~ Origin ,nrow = 1)
bars6+ coord_flip()
# heatplot
base  = ggplot(df.C, aes(x = Origin, y = reorder(FareCat, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "white",
high = "black")
heat2 + scale_y_discrete(limits = rev(levels(mydata1$faretype)))
names(df.T)=c('FareCat','Origin','Percent') #renaming
head(df.T)
base  = ggplot(df.T, aes(x = reorder(FareCat, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + geom_segment(aes(y = 0,
x = FareCat,
yend = Percent,
xend = FareCat), color = "grey50")
bars3 = bars2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
bars4 = bars3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
bars5 = bars4 + scale_x_discrete(limits=tableFreqO$access_mode)
bars6 = bars5 + facet_wrap( ~ Origin ,nrow = 1)
bars6+ coord_flip()
# heatplot
base  = ggplot(df.T, aes(x = Origin, y = reorder(FareCat, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "white",
high = "black")
heat2 + scale_y_discrete(limits = rev(levels(mydata1$faretype)))
