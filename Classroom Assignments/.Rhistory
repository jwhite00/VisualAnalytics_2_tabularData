daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
# you have:
head(daysByNeigh)
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
head(crimesByNeigh)
as.data.frame(daysByNeigh)%>%rownames_to_column()
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
head(num_num)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
plot1= base +  geom_point()
plot1
library(ggrepel)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,
label=rowname)) # you need this aesthetics!
plot1= base +  geom_point()
plot1 + geom_text_repel()
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_point()
scatp1 + geom_text(aes(label=ifelse(crimesByNeigh>=5,num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
base +  geom_point() + geom_text_repel(aes(label=ifelse(num_num$rowname=='NORTHGATE',
num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  theme(legend.position='none')
scatp4= scatp3 + scale_fill_distiller(palette="Greys", direction=1)
scatp4
scatp5 = scatp4 +  scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
scatp5
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
as.data.frame(daysByNeigh)%>%rownames_to_column()
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
library(ggrepel)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,
label=rowname)) # you need this aesthetics!
plot1= base +  geom_point()
plot1 + geom_text_repel()
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,
label=rowname)) # you need this aesthetics!
plot1= base +  geom_point()
plot1 + geom_text_repel()
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_point()
scatp1 + geom_text(aes(label=ifelse(crimesByNeigh>=5,num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
base +  geom_point() + geom_text_repel(aes(label=ifelse(num_num$rowname=='NORTHGATE',
num_num$rowname, "")))
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  theme(legend.position='none')
scatp4= scatp3 + scale_fill_distiller(palette="Greys", direction=1)
scatp4
scatp5 = scatp4 +  scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
scatp5
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  theme(legend.position='none')
scatp4= scatp3 + scale_fill_distiller(palette="Greys", direction=1)
scatp5 = scatp4 +  scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
scatp5
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
base +  geom_point() + geom_text_repel(aes(label=ifelse(num_num$rowname=='NORTHGATE',
num_num$rowname, "")))
titleText7="Does a Neighborhood's Crime Rates Influence \nHow Long it Takes Residents to Report Crimes?"
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot2=plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
plot3 = plot2 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
titleText7="Does a Neighborhood's Crime Rates Influence \nHow Long it Takes Residents to Report Crimes?"
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot2=plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
plot3 = plot2 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
plot3
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp3=scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
scatp4 = scatp3 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp3=scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
scatp4 = scatp3 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
scatp4
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  theme(legend.position='none')
scatp4= scatp3 + scale_fill_distiller(palette="Greys", direction=1)
scatp5 = scatp4 +  scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
scatp6 = scatp5 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
scatp6
library(ggplot2)
library(magrittr)
library(ggrepel)
library(Rmisc)
library(tibble)
# table of proportion based on total, gives you panel data
df.T=as.data.frame(CrimeTotal)
#renaming
names(df.T)=c('Crime','Daytime','Percent')
(CrimeTotal=table(crime$crimecat,crime$Occurred.DayTime))
(CrimeTotal=table(crime$crimecat,crime$Occurred.DayTime)%>% #create table and then...
prop.table() %>% #compute proportion and then...
"*"(100)%>% # multiply by 100 and then...
round(2) #...round to to decimals
)
#independent in columns, dependent in rows
CrimeCol=table(crime$crimecat,crime$Occurred.DayTime)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
library(ggplot2)
library(magrittr)
library(ggrepel)
library(Rmisc)
library(tibble)
# table of proportion based on total, gives you panel data
df.T=as.data.frame(CrimeTotal)
#renaming
names(df.T)=c('Crime','Daytime','Percent')
#independent in columns, dependent in rows
CrimeCol=table(crime$crimecat,crime$Occurred.DayTime)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
titleText4 = 'What Crimes Are Being Committed, \nand When?'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
lolliplot1=base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
lolliplot2 = lolliplot1 + geom_point()
lolliplot3 = lolliplot2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText)
lolliplot4 = lolliplot3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
lolliplot5 = lolliplot4 + scale_x_discrete(limits=tableFreqO$access_mode)
lolliplot6 = lolliplot5 + facet_wrap( ~ Daytime ,nrow = 1)
lolliplot7= lolliplot6 + geom_text(aes(y = Percent ,
label = paste0(round(Percent,2), '%')),
hjust=-1, # if flipping 'hjust'
size = 3)
lolliplot6 + coord_flip()
titleText4 = 'What Crimes Are Being Committed, \nand When?'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
lolliplot1=base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
lolliplot2 = lolliplot1 + geom_point()
lolliplot3 = lolliplot2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText)
lolliplot4 = lolliplot3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
lolliplot5 = lolliplot4 + scale_x_discrete(limits=tableFreqO$access_mode)
lolliplot6 = lolliplot5 + facet_wrap( ~ Daytime ,nrow = 1)
lolliplot7= lolliplot6 + geom_text(aes(y = Percent ,
label = paste0(round(Percent,2), '%')),
hjust=-1, # if flipping 'hjust'
size = 3)
lolliplot7 + coord_flip()
titleText4 = 'What Crimes Are Being Committed, \nand When?'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
lolliplot1=base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
lolliplot2 = lolliplot1 + geom_point()
lolliplot3 = lolliplot2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText)
lolliplot4 = lolliplot3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
lolliplot5 = lolliplot4 + scale_x_discrete(limits=tableFreqO$access_mode)
lolliplot6 = lolliplot5 + facet_wrap( ~ Daytime ,nrow = 1)
lolliplot6+ coord_flip()
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
lolliplot1=base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
lolliplot2 = lolliplot1 + geom_point()
lolliplot3 = lolliplot2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
lolliplot4 = lolliplot3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
lolliplot5 = lolliplot4 + scale_x_discrete(limits=tableFreqO$access_mode)
lolliplot6 = lolliplot5 + facet_wrap( ~ Daytime ,nrow = 1)
lolliplot6+ coord_flip()
# heatplot
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "yellow",
high = "purple")
heat3 = heat2 + theme_classic()
heat4 = heat3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.6),
legend.title = element_blank(), #no title for legend
legend.position="right",
legend.direction="vertical",
legend.key.width=unit(1, "cm"),
legend.key.height=unit(1, "cm"))
heat4 + labs(y="Crime",x="Time of Day", source=sourceText2, title='When Do Crimes Take Place?')
titleText5='How Many Years Does it Take \nfor a Crime to Be Reported?'
base= ggplot(crimeYearGG,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median, size=2,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all4 = all3 + coord_flip()
all5 = all4 + labs(title=titleText5,
x ='Type of Crime',
y = 'Years to Report',
caption = sourceText2)
all5
titleText6= 'How Many Weeks Does it Take \nfor a Crime to Be Reported?'
base = ggplot(crimeYearGG2,
aes(x = reorder(crimecat, WeeksToReport, FUN = max),
y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,size=2,
geom="line",
aes(group=2,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all4=all3+coord_flip()
all5 = all4 + labs(title=titleText6,
x ='Type of Crime',
y = 'Weeks to Report',
caption = sourceText2)
all5
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
#MERGE
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
#MERGE
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
link="https://github.com/EvansDataScience/data/raw/master/crime.RData"
load(file = url(link))
link="https://github.com/EvansDataScience/data/raw/master/crime.RData"
load(file = url(link))
library(ggplot2)
library(magrittr)
library(ggrepel)
library(Rmisc)
library(tibble)
# table of proportion based on total, gives you panel data
df.T=as.data.frame(CrimeTotal)
#renaming
names(df.T)=c('Crime','Daytime','Percent')
#independent in columns, dependent in rows
CrimeCol=table(crime$crimecat,crime$Occurred.DayTime)%>%
prop.table(margin = 2)%>%   # 2 is % by column
"*"(100)%>%
round(3)
crimeWeek=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeWeek$WeeksToReport=crimeWeek$DaysToReport/7
crimeYearGG2=crimeWeek[complete.cases(crimeWeek$WeeksToReport) &complete.cases(crimeWeek$crimecat),]
#Exercise 4 prep
# 1. MEAN of days it takes to report a crime by neighborhood
daysByNeigh=tapply(crime$DaysToReport, crime$Neighborhood, mean,na.rm=T)
daysByNeigh=as.data.frame(daysByNeigh)%>%rownames_to_column()
# 2. PROPORTION of crimes by neighborhood
crimesByNeigh=tapply(crime$crimecat, crime$Neighborhood, length)%>%
prop.table()%>%
"*"(100)%>%
round(2)
crimesByNeigh=as.data.frame(crimesByNeigh)%>%rownames_to_column()
#MERGE
num_num=merge(daysByNeigh,crimesByNeigh) # 'row name' is the "key"
titleText4 = 'What Crimes Are Being Committed, \nand When?'
sourceText2= 'City of Seattle: Open Data Portal'
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
lolliplot1=base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
lolliplot2 = lolliplot1 + geom_point()
lolliplot3 = lolliplot2 + labs(title=titleText4,
x ='Access Mode',
y = '%',
caption = sourceText2)
lolliplot4 = lolliplot3 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
lolliplot5 = lolliplot4 + scale_x_discrete(limits=tableFreqO$access_mode)
lolliplot6 = lolliplot5 + facet_wrap( ~ Daytime ,nrow = 1)
lolliplot6+ coord_flip()
# heatplot
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "yellow",
high = "purple")
heat3 = heat2 + theme_classic()
heat4 = heat3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.6),
legend.title = element_blank(), #no title for legend
legend.position="right",
legend.direction="vertical",
legend.key.width=unit(1, "cm"),
legend.key.height=unit(1, "cm"))
heat4 + labs(y="Crime",x="Time of Day", source=sourceText2, title='When Do Crimes Take Place?')
titleText5='How Many Years Does it Take \nfor a Crime to Be Reported?'
base= ggplot(crimeYearGG,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median, size=2,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all4 = all3 + coord_flip()
all5 = all4 + labs(title=titleText5,
x ='Type of Crime',
y = 'Years to Report',
caption = sourceText2)
all5
titleText6= 'How Many Weeks Does it Take \nfor a Crime to Be Reported?'
base = ggplot(crimeYearGG2,
aes(x = reorder(crimecat, WeeksToReport, FUN = max),
y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,size=2,
geom="line",
aes(group=2,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all4=all3+coord_flip()
all5 = all4 + labs(title=titleText6,
x ='Type of Crime',
y = 'Weeks to Report',
caption = sourceText2)
all5
titleText7="Does a Neighborhood's Crime Rates Influence \nHow Long it Takes Residents to Report Crimes?"
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh,label=rowname))
plot1= base +  geom_point()
plot2=plot1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
plot3 = plot2 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
plot3
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  geom_hex(bins = 10)
scatp2= scatp1 + geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname,
"")))
scatp3=scatp2 + scale_fill_distiller(palette ="Greys",direction=1) # try -1
scatp4 = scatp3 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
scatp4
base = ggplot(num_num, aes(daysByNeigh,crimesByNeigh))
scatp1 = base +  stat_density_2d(aes(fill = ..density..),
geom = "raster", contour = FALSE)
scatp2=scatp1+geom_text_repel(aes(label=ifelse(crimesByNeigh>=5,
num_num$rowname, "")))
scatp3 = scatp2 +  theme(legend.position='none')
scatp4= scatp3 + scale_fill_distiller(palette="Greys", direction=1)
scatp5 = scatp4 +  scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
scatp6 = scatp5 + labs(title=titleText7,
x ='Days to Report',
y = 'Crimes by Neighborhood',
caption = sourceText)
scatp6
install.packages("ggiraph")
library(ggiraph)
library(ggiraph)
